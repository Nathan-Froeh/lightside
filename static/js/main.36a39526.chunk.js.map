{"version":3,"sources":["images/green.png","images/red.png","images/giphy.gif","Card/Card.jsx","Home/Home.jsx","Card-Components/CardComponents.jsx","Nav/Nav.jsx","Fetch/FetchCall.js","App/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Card","_ref","props","addFavorite","react_default","a","createElement","src","red","className","alt","onClick","green","Home","crawl","title","opening_crawl","release_date","CardComponents","group","page","window","location","href","loadingIcon","loading","cards","map","person","i","src_Card_Card","id","key","src_Home_Home","length","Nav","getCrawl","getPeople","getPlanets","getVehicles","allFavorites","react_router_dom","to","Call","fetchCrawl","fetch","then","response","ok","json","Error","fetchPeople","fetchPlanets","fetchVehicles","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","showPeople","showPlanets","showVehicles","showCrawl","randomNumber","Math","floor","random","setState","film","setCrawl","data","results","state","people","cleanPeople","fetchData","name","concat","birth_year","gender","height","eye_color","created","setPeople","vehicles","cleanVehicles","vehicle","model","vehicle_class","passengers","setVehicles","planets","cleanPlanets","planet","terrain","diameter","population","setPlanets","handleFavorite","prop","favorites","includes","unfavorite","filter","favorite","toConsumableArray","isHidden","_this2","src_Nav_Nav","react_router","exact","path","component","src_Card_Components_CardComponents","Component","Boolean","hostname","match","router","src_App_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mXC+BzBC,EAzBF,SAAAC,GAA0B,IAAxBC,EAAwBD,EAAxBC,MAAOC,EAAiBF,EAAjBE,YACpB,OACEC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAIJ,EAAM,KAEK,IAAbA,EAAM,IAAgBE,EAAAC,EAAAC,cAAA,OAAKC,IAAKC,IAAKC,UAAU,2BAA2BC,IAAI,0CAA0CC,QAAS,kBAAMR,EAAYD,OAGtI,IAAbA,EAAM,IAAeE,EAAAC,EAAAC,cAAA,OAAKC,IAAKK,IAAOH,UAAU,yBAAyBC,IAAI,uCAAuCC,QAAS,kBAAMR,EAAYD,OAGnJE,EAAAC,EAAAC,cAAA,SAAIJ,EAAM,IACVE,EAAAC,EAAAC,cAAA,SAAIJ,EAAM,IACVE,EAAAC,EAAAC,cAAA,SAAIJ,EAAM,IACVE,EAAAC,EAAAC,cAAA,SAAIJ,EAAM,MCKDW,eAtBF,SAAAZ,GAAa,IAAXa,EAAWb,EAAXa,MACb,OACEV,EAAAC,EAAAC,cAAA,WAASG,UAAU,QACjBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACfL,EAAAC,EAAAC,cAAA,WAASG,UAAU,aACjBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,UAAKQ,EAAMC,QAEbX,EAAAC,EAAAC,cAAA,SAAIQ,EAAME,eACVZ,EAAAC,EAAAC,cAAA,SAAIQ,EAAMG,oCCmCLC,EA1CQ,SAAAjB,GAAiC,IAA/BkB,EAA+BlB,EAA/BkB,MAAOhB,EAAwBF,EAAxBE,YAAaW,EAAWb,EAAXa,MACrCM,EAAOC,OAAOC,SAASC,KACvBC,EAAepB,EAAAC,EAAAC,cAAA,OAAKC,IAAKkB,IAASf,IAAI,cAAcD,UAAU,gBAC9DiB,EAAQP,EAAMQ,IAAI,SAACC,EAAQC,GAE/B,OAAQzB,EAAAC,EAAAC,cAACwB,EAAD,CACR5B,MAAO0B,EACPG,GAAIH,EAAO,GACXI,IAAKJ,EAAO,GAAKC,EACjB1B,YAAaA,MAKf,OACEC,EAAAC,EAAAC,cAAA,WAASG,UAAU,kBAEP,wCAATW,GAAkE,KAAhBN,EAAMC,OAAgBS,EAE/D,wCAATJ,GAAkE,KAAhBN,EAAMC,OAAgBX,EAAAC,EAAAC,cAAC2B,EAAD,CAAMnB,MAAOA,EAAOU,YAAaA,IAEhG,wCAATJ,GACa,6CAATA,GACiB,IAAjBD,EAAMe,QAAgBV,EAGT,IAAjBL,EAAMe,QAAyB,wCAATd,GAAkDM,EAEvD,IAAjBP,EAAMe,QAAyB,6CAATd,GAClBhB,EAAAC,EAAAC,cAAA,2ECmBI6B,EAlDH,SAAAlC,GAAkE,IAAhEmC,EAAgEnC,EAAhEmC,SAAUC,EAAsDpC,EAAtDoC,UAAWC,EAA2CrC,EAA3CqC,WAAYC,EAA+BtC,EAA/BsC,YAAaC,EAAkBvC,EAAlBuC,aAC1D,OACEpC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEC,GAAI,QACJjC,UAAU,WACVE,QAASyB,GAEThC,EAAAC,EAAAC,cAAA,yBAEFF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEC,GAAG,UACHjC,UAAU,WACVE,QAAS0B,GAETjC,EAAAC,EAAAC,cAAA,qBAEFF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEC,GAAG,WACHjC,UAAU,WACVE,QAAS2B,GAETlC,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEC,GAAG,YACHjC,UAAU,WACVE,QAAS4B,GAETnC,EAAAC,EAAAC,cAAA,uBAEFF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEC,GAAG,aACHjC,UAAU,YAEVL,EAAAC,EAAAC,cAAA,uBAAcF,EAAAC,EAAAC,cAAA,YAAOkC,EAAaN,aCA7BS,EAxCF,CAEVC,WAFU,WAGT,OAAOC,MAAM,8BACVC,KAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OACT,MAAMC,MAAM,YAI3BC,YAXW,WAYR,OAAON,MAAM,gCACXC,KAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OACT,MAAMC,MAAM,YAI3BE,aApBW,WAqBT,OAAOP,MAAM,iCACXC,KAAK,SAAAC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OACT,MAAMC,MAAM,YAIzBG,cA7BW,WA8BT,OAAOR,MAAM,kCACXC,KAAK,SAAAC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OACT,MAAMC,MAAM,aC2JZI,cAtLb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAWFI,kBAAoB,WACW,0CAAzBzC,OAAOC,SAASC,KAClBgC,EAAKQ,aAC6B,2CAAzB1C,OAAOC,SAASC,KACzBgC,EAAKS,cAC6B,4CAAzB3C,OAAOC,SAASC,KACzBgC,EAAKU,eAC6B,wCAAzB5C,OAAOC,SAASC,MACzBgC,EAAKW,aApBKX,EAwBdW,UAAY,WACV,IAAMC,EAAeC,KAAKC,MAAM,EAAAD,KAAKE,UACrCf,EAAKgB,SAAS,CAACC,KAAM,CAACzD,MAAM,GAAIC,cAAc,GAAIC,aAAa,MAC7D0B,EAAKC,WAAWW,EAAKkB,UACpB3B,KAAK,SAAA4B,GAAI,OAAInB,EAAKkB,SAASC,EAAKC,QAAQR,OA5B/BZ,EA+BdkB,SAAW,SAAC3D,GACVyC,EAAKgB,SAAS,CAACC,KAAM1D,KAhCTyC,EAmCdQ,WAAa,WACqB,IAA7BR,EAAKqB,MAAMC,OAAO3C,QACnBS,EAAKQ,YAAYI,EAAKuB,aACrBhC,KAAK,SAAA4B,GAAI,OAAInB,EAAKuB,YAAYJ,EAAKC,YAtC1BpB,EA0CduB,YAAc,SAACC,GACb,IAAMF,EAASE,EAAUpD,IAAI,SAAAC,GAU3B,MATa,CACXA,EAAOoD,KADI,eAAAC,OAEIrD,EAAOsD,YAFX,WAAAD,OAGArD,EAAOuD,QAHP,WAAAF,OAIArD,EAAOwD,QAJP,cAAAH,OAKGrD,EAAOyD,WACrBzD,EAAO0D,SACP,KAKJ,OADA/B,EAAKgC,UAAUV,GACRA,GAxDKtB,EA2DdgC,UAAY,SAACV,GACXtB,EAAKgB,SAAS,CAACM,OAAQA,KA5DXtB,EA+DdU,aAAe,WACqB,IAA/BV,EAAKqB,MAAMY,SAAStD,QACrBS,EAAKU,cAAcE,EAAKkC,eACvB3C,KAAK,SAAA4B,GAAI,OAAInB,EAAKkC,cAAcf,EAAKC,YAlE5BpB,EAsEZkC,cAAgB,SAACV,GACf,IAAMS,EAAWT,EAAUpD,IAAI,SAAA+D,GAU7B,MATa,CACXA,EAAQV,KADG,UAAAC,OAEDS,EAAQC,OAFP,UAAAV,OAGDS,EAAQE,eAHP,eAAAX,OAIIS,EAAQG,YACvB,KACAH,EAAQJ,SACR,KAKJ,OADA/B,EAAKuC,YAAYN,GACVA,GApFGjC,EAuFZuC,YAAc,SAACN,GACbjC,EAAKgB,SAAS,CAACiB,SAAUA,KAxFfjC,EA2FZS,YAAc,WACqB,IAA9BT,EAAKqB,MAAMmB,QAAQ7D,QACpBS,EAAKS,aAAaG,EAAKyC,cACtBlD,KAAK,SAAA4B,GAAI,OAAInB,EAAKyC,aAAatB,EAAKC,YA9F7BpB,EAkGZyC,aAAe,SAACjB,GACd,IAAMgB,EAAUhB,EAAUpD,IAAI,SAAAsE,GAU5B,MATa,CACXA,EAAOjB,KADI,YAAAC,OAECgB,EAAOC,SAFR,aAAAjB,OAGEgB,EAAOE,UAHT,eAAAlB,OAIIgB,EAAOG,YACtB,KACAH,EAAOX,SACP,KAKJ,OADA/B,EAAK8C,WAAWN,GACTA,GAhHGxC,EAmHZ8C,WAAa,SAACN,GACZxC,EAAKgB,SAAS,CAACwB,QAASA,KApHdxC,EAuHd+C,eAAiB,SAACC,GAChB,IAAMC,EAAYjD,EAAKqB,MAAMpC,aAC7B,GAAIgE,EAAUC,SAASF,GAGhB,CACLA,EAAK,IAAMA,EAAK,GAChB,IAAMG,EAAaF,EAAUG,OAAO,SAAAC,GAAQ,OAAIA,IAAaL,IAC7DhD,EAAKgB,SAAS,CAAC/B,aAAckE,SAL7BH,EAAK,IAAMA,EAAK,GAChBhD,EAAKgB,SAAS,CAAC/B,aAAY,GAAAyC,OAAAzB,OAAAqD,EAAA,EAAArD,CAAMgD,GAAN,CAAiBD,OAzH9ChD,EAAKqB,MAAQ,CACXJ,KAAM,CAACzD,MAAM,GAAIC,cAAc,GAAIC,aAAa,IAChD4D,OAAQ,GACRW,SAAU,GACVO,QAAS,GACTvD,aAAc,GACdsE,UAAU,GARAvD,wEAmIL,IAAAwD,EAAArD,KACP,OACEtD,EAAAC,EAAAC,cAAA,QAAMG,UAAU,OACdL,EAAAC,EAAAC,cAAC0G,EAAD,CACE5E,SAAUsB,KAAKQ,UACf7B,UAAWqB,KAAKK,WAChBzB,WAAYoB,KAAKM,YACjBzB,YAAamB,KAAKO,aAClBzB,aAAckB,KAAKkB,MAAMpC,eAE3BpC,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,QACXC,UAAW,kBAAMhH,EAAAC,EAAAC,cAAC+G,EAAD,CACflG,MAAO4F,EAAKnC,MAAMC,OAClB1E,YAAa4G,EAAKT,eAClBxF,MAAOiG,EAAKnC,MAAMJ,UAGtBpE,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,UACXC,UAAW,kBAAMhH,EAAAC,EAAAC,cAAC+G,EAAD,CACflG,MAAO4F,EAAKnC,MAAMC,OAClB1E,YAAa4G,EAAKT,oBAGtBlG,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,WACXC,UAAW,kBAAMhH,EAAAC,EAAAC,cAAC+G,EAAD,CACflG,MAAO4F,EAAKnC,MAAMmB,QAClB5F,YAAa4G,EAAKT,oBAGtBlG,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,YACXC,UAAW,kBAAMhH,EAAAC,EAAAC,cAAC+G,EAAD,CACflG,MAAO4F,EAAKnC,MAAMY,SAClBrF,YAAa4G,EAAKT,oBAGtBlG,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,aACXC,UAAW,kBAAMhH,EAAAC,EAAAC,cAAC+G,EAAD,CACflG,MAAO4F,EAAKnC,MAAMpC,aAClBrC,YAAa4G,EAAKT,4BA/KZgB,aCKEC,QACW,cAA7BlG,OAAOC,SAASkG,UAEe,UAA7BnG,OAAOC,SAASkG,UAEhBnG,OAAOC,SAASkG,SAASC,MACvB,2DCXN,IAAMC,EACJtH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACqH,EAAD,OAKJC,IAASC,OAAOH,EAAQI,SAASC,eAAe,SDmH1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpF,KAAK,SAAAqF,GACjCA,EAAaC","file":"static/js/main.36a39526.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/green.8faa206d.png\";","module.exports = __webpack_public_path__ + \"static/media/red.18149f34.png\";","module.exports = __webpack_public_path__ + \"static/media/giphy.5c268a03.gif\";","import React from 'react';\nimport './Card.scss'\nimport green from '../images/green.png'\nimport red from '../images/red.png'\nimport PropTypes from 'prop-types'\n\nconst Card = ({props, addFavorite}) => {\n  return (\n    <article>\n      <div>\n        <p>{props[0]}</p>\n        { \n          props[6] === false && <img src={red} className='unfavorite-btn favorites' alt='Red crossing lightsabers for unfavorite' onClick={() => addFavorite(props)}/>\n        }\n        {\n          props[6] === true && <img src={green} className='favorite-btn favorites' alt='Green single lightsaber for favorite' onClick={() => addFavorite(props)}/>\n        } \n      </div>\n      <p>{props[1]}</p>\n      <p>{props[2]}</p>\n      <p>{props[3]}</p>\n      <p>{props[4]}</p>\n    </article>\n  )\n}\n\nCard.propTypes = {\n  addFavorite: PropTypes.func,\n  props: PropTypes.array\n}\n\nexport default Card;","import React from 'react';\nimport './Home.scss';\nimport PropTypes from 'prop-types'\n\nconst Home = ({crawl}) => {\n  return(\n    <section className='home'>\n      <div className=\"fade\"></div>\n      <section className=\"star-wars\">\n        <div className=\"crawl\">\n          <div className=\"title\">\n            <h1>{crawl.title}</h1>\n          </div>\n          <p>{crawl.opening_crawl}</p>\n          <p>{crawl.release_date}</p>\n        </div>\n      </section>\n    </section>\n    \n  )\n}\n\nHome.propTypes = {\n  crawl: PropTypes.object\n}\n\nexport default Home;","import React from 'react';\nimport Card from '../Card/Card.jsx'\nimport './CardComponents.scss'\nimport Home from '../Home/Home.jsx';\nimport loading from '../images/giphy.gif'\nimport PropTypes from 'prop-types'\n\nconst CardComponents = ({group, addFavorite, crawl}) => {\n  const page = window.location.href\n  const loadingIcon = (<img src={loading} alt='Loading gif' className='loading-gif'/>)\n  const cards = group.map((person, i) => {\n\n    return (<Card \n    props={person} \n    id={person[5]} \n    key={person[5] + i}\n    addFavorite={addFavorite}\n  />)})\n\n  // 'https://nathan-froeh.github.io/lightside/'\n\n  return (\n    <section className='cardComponents'>\n\n      {page === 'https://nathan-froeh.github.io/home' && crawl.title === '' && loadingIcon}\n\n      {page === 'https://nathan-froeh.github.io/home' && crawl.title !== '' && <Home crawl={crawl} loadingIcon={loadingIcon}/>}\n\n      {page !== 'https://nathan-froeh.github.io/home' \n        && page !== 'https://nathan-froeh.github.io/favorites' \n        && group.length === 0 && loadingIcon\n      }\n\n      {group.length !== 0 && page !== 'https://nathan-froeh.github.io/home' && cards}\n\n      {group.length === 0 && page === 'https://nathan-froeh.github.io/favorites' \n        && <h2>You do not have any favorites</h2>\n      }\n\n    </section>\n  )\n}\n\nCardComponents.propTypes = {\n  group: PropTypes.array, \n  addFavorite: PropTypes.func,\n  crawl: PropTypes.object\n}\n\nexport default CardComponents;","import React from 'react';\nimport './Nav.scss';\nimport {NavLink} from 'react-router-dom';\nimport PropTypes from 'prop-types'\n\nconst Nav = ({getCrawl, getPeople, getPlanets, getVehicles, allFavorites}) => {\n  return (\n    <nav>\n      <NavLink \n        to={'/home'} \n        className='nav home' \n        onClick={getCrawl}\n      > \n        <h1>LIGHT SIDE</h1>\n      </NavLink>\n      <section>\n        <NavLink \n          to='/people' \n          className='nav link' \n          onClick={getPeople}\n        > \n          <h2>PEOPLE</h2> \n        </NavLink>\n        <NavLink \n          to='/planets' \n          className='nav link' \n          onClick={getPlanets}\n        > \n          <h2>PLANETS</h2> \n        </NavLink>\n        <NavLink \n          to='/vehicles' \n          className='nav link' \n          onClick={getVehicles}\n        > \n          <h2>VEHICLES</h2> \n        </NavLink>\n        <NavLink \n          to='/favorites' \n          className='nav link' \n        > \n          <h2>FAVORITES <span>{allFavorites.length}</span></h2>\n        </NavLink>\n      </section>\n    </nav>\n  )\n}\n\nNav.propTypes = {\n  getCrawl: PropTypes.func,\n  getPeople: PropTypes.func,\n  getPlanets: PropTypes.func,\n  getVehicles: PropTypes.func,\n  allFavorites: PropTypes.array\n}\nexport default Nav;\n\n","\nconst Call = {\n\n   fetchCrawl() {\n    return fetch('https://swapi.co/api/films')\n      .then(response => {\n        if (response.ok) {\n          return response.json()\n        } else { throw Error('Error')}\n      })\n  },\n\n  fetchPeople() {\n     return fetch('https://swapi.co/api/people/')\n      .then(response => {\n        if (response.ok) {\n          return response.json()\n        } else { throw Error('Error')}\n      })\n  },\n\n  fetchPlanets() {\n    return fetch('https://swapi.co/api/planets/')\n     .then(response => {\n      if (response.ok) {\n        return response.json()\n      } else { throw Error('Error')}\n    })\n  },\n\n  fetchVehicles() {\n    return fetch('https://swapi.co/api/vehicles/')\n     .then(response => {\n      if (response.ok) {\n        return response.json()\n      } else { throw Error('Error')}\n    })\n  }\n}\n\n\nexport default Call;","import React, { Component } from 'react';\nimport CardComponents from '../Card-Components/CardComponents';\nimport './App.scss';\nimport {Route} from \"react-router-dom\";\nimport Nav from '../Nav/Nav.jsx'\nimport Call from '../Fetch/FetchCall'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      film: {title:'', opening_crawl:'', release_date:''},\n      people: [],\n      vehicles: [],\n      planets: [],\n      allFavorites: [],\n      isHidden: false\n    }\n  }\n  \n  componentDidMount = () => {\n    if (window.location.href === 'https://nathan-froeh.github.io/people') {\n      this.showPeople()\n    } else if (window.location.href === 'https://nathan-froeh.github.io/planets') {\n      this.showPlanets()\n    } else if (window.location.href === 'https://nathan-froeh.github.io/vehicles') {\n      this.showVehicles()\n    } else if (window.location.href === 'https://nathan-froeh.github.io/home') {\n      this.showCrawl()\n    }\n  }\n\n  showCrawl = () => {\n    const randomNumber = Math.floor(Math.random() * (6 - 0 + 1))\n    this.setState({film: {title:'', opening_crawl:'', release_date:''}})\n      Call.fetchCrawl(this.setCrawl)\n      .then(data => this.setCrawl(data.results[randomNumber]) )\n  }\n\n  setCrawl = (crawl) => {\n    this.setState({film: crawl})\n  }\n\n  showPeople = () => {\n    if(this.state.people.length === 0) {\n      Call.fetchPeople(this.cleanPeople)\n      .then(data => this.cleanPeople(data.results))\n    }\n  }\n\n  cleanPeople = (fetchData) => {\n    const people = fetchData.map(person => {\n      const info = [\n        person.name, \n        `Birth Year: ${person.birth_year}`, \n        `Gender: ${person.gender}`, \n        `Height: ${person.height}`, \n        `Eye Color: ${person.eye_color}`, \n        person.created,\n        false\n      ]\n      return info\n    })\n    this.setPeople(people)\n    return people\n  }\n\n  setPeople = (people) => {\n    this.setState({people: people})\n  }\n\n  showVehicles = () => {\n    if(this.state.vehicles.length === 0) {\n      Call.fetchVehicles(this.cleanVehicles)\n      .then(data => this.cleanVehicles(data.results))\n    }\n  }\n\n    cleanVehicles = (fetchData) => {\n      const vehicles = fetchData.map(vehicle => {\n        const info = [\n          vehicle.name,\n          `Model: ${vehicle.model}`,\n          `Class: ${vehicle.vehicle_class}`,\n          `Passengers: ${vehicle.passengers}`,\n          null,\n          vehicle.created,\n          false\n        ]\n        return info\n      })\n      this.setVehicles(vehicles)\n      return vehicles\n    }\n\n    setVehicles = (vehicles) => {\n      this.setState({vehicles: vehicles})\n    }\n\n    showPlanets = () => {\n      if(this.state.planets.length === 0) {\n        Call.fetchPlanets(this.cleanPlanets)\n        .then(data => this.cleanPlanets(data.results))\n      }\n    }\n    \n    cleanPlanets = (fetchData) => {\n      const planets = fetchData.map(planet => {\n        const info = [\n          planet.name,\n          `Terrain: ${planet.terrain}`,\n          `Diameter: ${planet.diameter}`,\n          `Population: ${planet.population}`,\n          null,\n          planet.created,\n          false\n        ]\n        return info\n      })\n      this.setPlanets(planets)\n      return planets\n    }\n\n    setPlanets = (planets) => {\n      this.setState({planets: planets})\n    }\n\n  handleFavorite = (prop) => {\n    const favorites = this.state.allFavorites;\n    if(!favorites.includes(prop)) {\n      prop[6] = !prop[6]\n      this.setState({allFavorites: [...favorites ,prop]})\n    } else {\n      prop[6] = !prop[6]\n      const unfavorite = favorites.filter(favorite => favorite !== prop)\n      this.setState({allFavorites: unfavorite})\n    }\n  }\n\n  render() {\n    return (\n      <main className=\"App\">\n        <Nav \n          getCrawl={this.showCrawl}\n          getPeople={this.showPeople} \n          getPlanets={this.showPlanets}\n          getVehicles={this.showVehicles}\n          allFavorites={this.state.allFavorites}\n        />\n        <Route \n          exact path='/home' \n          component={() => <CardComponents \n            group={this.state.people} \n            addFavorite={this.handleFavorite}\n            crawl={this.state.film}\n          />}\n        />\n        <Route \n          exact path='/people' \n          component={() => <CardComponents \n            group={this.state.people} \n            addFavorite={this.handleFavorite}\n          />}\n        />\n        <Route \n          exact path='/planets' \n          component={() => <CardComponents \n            group={this.state.planets}\n            addFavorite={this.handleFavorite}\n          />}\n        />\n        <Route \n          exact path='/vehicles' \n          component={() => <CardComponents \n            group={this.state.vehicles}\n            addFavorite={this.handleFavorite}\n          />}\n        />\n        <Route \n          exact path='/favorites' \n          component={() => <CardComponents \n            group={this.state.allFavorites}\n            addFavorite={this.handleFavorite}\n          />}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App/App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from \"react-router-dom\";\n\nconst router = (\n  <Router>\n    <App/>\n  </Router>\n)\n\n/* istanbul ignore next */\nReactDOM.render(router, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}